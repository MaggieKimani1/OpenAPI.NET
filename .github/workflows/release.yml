# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "vnext" branch
  push:
    branches: [ "vnext" ]
  pull_request:
    branches: [ "vnext" ]
  milestone:
    types: [closed]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.x

    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: |
        #cd ./src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj
        dotnet build --configuration Release --no-restore
        dotnet publish src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj -c Release -o binaries -r win-x64 --self-contained true /p:UseAppHost=true /p:PublishSingleFile=true -p:PublishTrimmed=true 
        
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        path: binaries
        
    - uses: kzrnm/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj
    - run: echo "${{steps.get-version.outputs.version}}"
    - run: echo "${{steps.get-version.outputs.version-prefix}}" 
    - run: echo "${{steps.get-version.outputs.version-suffix}}" 
    - run: echo "${{steps.get-version.outputs.package-version}}" 
    - run: echo "${{steps.get-version.outputs.assembly-version}}" 
    - run: echo "${{steps.get-version.outputs.file-version}}" 
    - run: echo "${{steps.get-version.outputs.informational-version}}" 
    
  create-release-notes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Create Release Notes
      uses: docker://decathlon/release-notes-generator-action:2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRAFT_RELEASE: "false"
        PRE_RELEASE: "false"
      with:
          args: |
              binaries/*.exe
        
    
     
