# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- azure-pipelines

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:

- stage: build
  jobs:
    - job: build
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET 6'
        inputs:
          version: 6.x

      # Build the Product project
      - task: DotNetCoreCLI@2
        displayName: 'build'
        inputs:
          projects: '$(Build.SourcesDirectory)\Microsoft.OpenApi.sln'
          arguments: '--configuration $(BuildConfiguration) --no-incremental'
      
      - task: PowerShell@2
        #displayName: "Set Hidi's version-number"
        name: setCurrProjVersion
        inputs:
          targetType: 'inline'
          script: |
            $xml = [Xml] (Get-Content .\src\Microsoft.OpenApi.Hidi\Microsoft.OpenApi.Hidi.csproj)
            $version = $xml.Project.PropertyGroup.Version
            echo $version
            echo "##vso[task.setvariable variable=version; isOutput=true]$version"
            
            # Pack
      - task: DotNetCoreCLI@2
        displayName: 'pack Hidi'
        inputs:
          command: pack
          projects: src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj
          arguments: '-o $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration) --no-build --include-symbols --include-source /p:SymbolPackageFormat=snupkg'

      # publish hidi as an .exe
      - task: DotNetCoreCLI@2
        displayName: publish Hidi as executable
        inputs:
          command: 'publish'
          arguments: -c Release --runtime win-x64 /p:PublishSingleFile=true --self-contained --output $(Build.ArtifactStagingDirectory)/Microsoft.OpenApi.Hidi-v$(version) -p:PublishTrimmed=true
          projects: 'src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj'
          publishWebProjects: False
          zipAfterPublish: false 

      - task: PublishBuildArtifacts@1
        displayName: 'Package Hidi'
        inputs: 
          ArtifactName: Nugets  
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Nugets'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: Hidi'
        inputs: 
          ArtifactName: Microsoft.OpenApi.Hidi-v$(version)  
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Microsoft.OpenApi.Hidi-v$(version)'
     
- stage: deploy
  # condition: and(contains(variables['build.sourceBranch'], 'refs/heads/vnext'), succeeded())
  dependsOn: build
  jobs:
    - deployment: deploy
      dependsOn: []
      environment: none
      strategy:
        runOnce:
          deploy:
            pool:
              vmImage: ubuntu-latest
            steps:
            - task: DownloadPipelineArtifact@2
              displayName: Download hidi executable from artifacts
              inputs:
                source: current
            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: |
                  $artifactName = Get-Item -Path $(Pipeline.Workspace)/Nugets/Microsoft.OpenApi.Hidi.*.nupkg -Filter Microsoft.OpenApi.Hidi-*.nupkg -recurse | select -First 1
                  $artifactVersion= $artifactName -replace "Microsoft.OpenApi.Hidi-", "" -replace ".nupkg", ""               
                  #Set Variable $artifactName and $artifactVersion
                  Write-Host "##vso[task.setvariable variable=artifactVersion; isSecret=false; isOutput=true]$artifactVersion"
                  Write-Host "##vso[task.setvariable variable=artifactName; isSecret=false; isOutput=true]$artifactName.FullName"
              displayName: 'Fetch Artifact Name'

            - task: GitHubRelease@1
              displayName: 'GitHub release (edit)'
              inputs:
                gitHubConnection: 'Github-MaggieKimani1'
                tagSource: userSpecifiedTag
                tag: '$(artifactVersion)'
                title: '$(artifactName)'
                releaseNotesSource: inline
                assets: '$(Pipeline.Workspace)\**\*.exe'
                changeLogType: issueBased